({
	doInit : function(component, event, helper) {
		var action = component.get("c.getAccountDetails");
        
        action.setParams({ "strObjectName" : component.get('v.sobjName'),
                           "strFieldSetName" : component.get('v.fieldSetName'),
                           "recordId" : component.get("v.recordId")
                         });
        
        action.setCallback(this, function(response){
            var state = response.getState();
            if(component.isValid() && state === "SUCCESS"){
                console.log('response.getReturnValue()=========>' ,response.getReturnValue());
                component.set("v.MainWrapper", response.getReturnValue());
            }
        });
        $A.enqueueAction(action);
	},
    
    editRec : function(component, event, helper){
        component.set("v.isEditParent", true);
    },
    
    saveRec : function(component, event, helper){
        component.set("v.isEditParent", false);
        var updateaction = component.get("c.UpdateRecord");
        var objWrapper = component.get('v.MainWrapper')
        console.log('=adasdasd=====', objWrapper.AccWrapperObj);
        
        updateaction.setParams({
            						"strObjectVal" : objWrapper.AccWrapperObj
                               });
        
        updateaction.setCallback(this, function(response){
            var state = response.getState();
            if(component.isValid() && state === 'SUCCESS'){
                console.log('===>Response updateddd');
                
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    "title": "Success!",
                    "type" : "success",
                    "message": "The record has been updated successfully."
                });
                toastEvent.fire();
                
                $A.get('e.force:refreshView').fire();
                
                /*var navEvt = $A.get("e.force:navigateToSObject");
                navEvt.setParams({
                  "recordId": component.get('v.recordId'),
                  "slideDevName": "related"
                });
                navEvt.fire();*/
            }
        });
        $A.enqueueAction(updateaction);
    },
    
    cancelRec : function(component, event, helper){
        component.set("v.isEditParent", false);
    },
    
    handleSampleEvent : function(component, event, helper){
    	var geteFieldVal = event.getParam("eFieldVal");
        var geteAPIVal = event.getParam("eApi");
        var geteObjVal = component.get("v.MainWrapper.AccWrapperObj");
        
		console.log("====geteFieldVal===>",geteFieldVal);
        console.log("====geteAPIVal=====>",geteAPIVal);
        console.log("====geteObjVal=====>",geteObjVal);
        
        geteObjVal[geteAPIVal] = geteFieldVal;
        
        component.set("v.MainWrapper.AccWrapperObj", geteObjVal);
        
        console.log("+++objRec===>>",geteObjVal);
	}
    
    
})